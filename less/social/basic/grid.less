/*
┏┓┏┓┏┳┓╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋┏━━━┓╋╋╋╋┏┓┏━━━┓╋╋╋╋╋╋┏┓
┃┃┃┃┃┃┃╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋┃┏━┓┃╋╋╋╋┃┃┃┏━┓┃╋╋╋╋╋┏┛┗┓
┃┃┃┃┃┃┗━┳┳━━┳━━┳━━┳━━┳━┓┃┃╋┗╋━┳┳━┛┃┃┗━━┳┓╋┏┳━┻┓┏╋━━┳┓┏┓
┃┗┛┗┛┃┏┓┣┫━━┫┏┓┃┃━┫┃━┫┏┛┃┃┏━┫┏╋┫┏┓┃┗━━┓┃┃╋┃┃━━┫┃┃┃━┫┗┛┃
┗┓┏┓┏┫┃┃┃┣━━┃┗┛┃┃━┫┃━┫┃╋┃┗┻━┃┃┃┃┗┛┃┃┗━┛┃┗━┛┣━━┃┗┫┃━┫┃┃┃
╋┗┛┗┛┗┛┗┻┻━━┫┏━┻━━┻━━┻┛╋┗━━━┻┛┗┻━━┛┗━━━┻━┓┏┻━━┻━┻━━┻┻┻┛
╋╋╋╋╋╋╋╋╋╋╋╋┃┃╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋┏━┛┃semantic and fluid
╋╋╋╋╋╋╋╋╋╋╋╋┗┛╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋┗━━┛Grid System "wrid"
*/
// Calculate the Size of the Columns

@total-width: 100%;
@columns: 12;
@column-size: @total-width / @columns;

.row(@x, @columns:@columns) {
	display: block;
	width: (@column-size*@x) - 2%;
	margin: 0 1% 0 1%;
	.clear-fix;
}

.column(@x, @columns:@columns, @direction: left, @margin: 2%) {
	@column-size: @total-width / @columns;
	display: inline;
	float: @direction;
	width: (@column-size*@x) - @margin;
	margin: 0 @margin/2 0 @margin/2;
}

.width(@x, @columns:@columns) {
	@column-size: @total-width / @columns;
	width: (@column-size*@x) - 2% !important;
}

.push(@x: 1, @columns:@columns) {
	@column-size: @total-width / @columns;
	margin-left: (@column-size*@x) !important;
}

.pull(@x: 1, @columns:@columns) {
	@column-size: @total-width / @columns;
	margin-right: (@column-size*@x) !important;
}