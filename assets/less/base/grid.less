//┏┓┏┓┏┳┓╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋┏━━━┓╋╋╋╋┏┓┏━━━┓╋╋╋╋╋╋┏┓
//┃┃┃┃┃┃┃╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋┃┏━┓┃╋╋╋╋┃┃┃┏━┓┃╋╋╋╋╋┏┛┗┓
//┃┃┃┃┃┃┗━┳┳━━┳━━┳━━┳━━┳━┓┃┃╋┗╋━┳┳━┛┃┃┗━━┳┓╋┏┳━┻┓┏╋━━┳┓┏┓
//┃┗┛┗┛┃┏┓┣┫━━┫┏┓┃┃━┫┃━┫┏┛┃┃┏━┫┏╋┫┏┓┃┗━━┓┃┃╋┃┃━━┫┃┃┃━┫┗┛┃
//┗┓┏┓┏┫┃┃┃┣━━┃┗┛┃┃━┫┃━┫┃╋┃┗┻━┃┃┃┃┗┛┃┃┗━┛┃┗━┛┣━━┃┗┫┃━┫┃┃┃
//╋┗┛┗┛┗┛┗┻┻━━┫┏━┻━━┻━━┻┛╋┗━━━┻┛┗┻━━┛┗━━━┻━┓┏┻━━┻━┻━━┻┻┻┛
//╋╋╋╋╋╋╋╋╋╋╋╋┃┃╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋┏━┛┃semantic and fluid
//╋╋╋╋╋╋╋╋╋╋╋╋┗┛╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋╋┗━━┛Grid System "wrid"
// Calculate the Size of the Columns

@total-width: 100%;
@columns: 12;
@margin: 2%;
@column-size: @total-width / @columns;

.row(@x, @columns:@columns,@margin:@margin) {
	display: block;
	width: (@column-size*@x) - @margin;
	margin: 0 (@margin/2) 0 (@margin/2);
	.clear-fix;
}

.column(@x, @columns:@columns, @direction: left, @margin:@margin) {
	@column-size: @total-width / @columns;
	display: inline-block;
	.ie7-inline-block();
	float: @direction;
	width: (@column-size*@x) - @margin;
	margin: 0 (@margin/2) 0 (@margin/2);
}

.column-splat(@splat) when (length(@splat) = 2) {
	.column( extract(@splat, 1), extract(@splat, 2));
}

.column-splat(@splat) when (length(@splat) = 3) {
	.column( extract(@splat, 1), extract(@splat, 2), extract(@splat, 3));
}

.column-splat(@splat) when (length(@splat) = 4) {
	.column( extract(@splat, 1), extract(@splat, 2), extract(@splat, 3), extract(@splat, 4));
}

.width(@x, @columns:@columns, @margin:@margin) {
	@column-size: @total-width / @columns;
	width: (@column-size*@x) - @margin !important;
}

.push(@x: 1, @columns:@columns) {
	@column-size: @total-width / @columns;
	margin-left: (@column-size*@x) !important;
}

.pull(@x: 1, @columns:@columns) {
	@column-size: @total-width / @columns;
	margin-right: (@column-size*@x) !important;
}


