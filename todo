- Profile:
 - Needs a big refactoring
 - Not secure against swap attacks (switch own data to wrong profile)
 - Really buggy (difficult to add new profiles for scopes/delete them)
 - Sluggish code
 - Idea:
  - have one big securedData object with encrypted content:
   - scope: {id: profileID, hash: hash}
  - eliminates swap attacks and should decrease buggyness
  - maybe also a back reference? (id: scope?)
  - automatically disallows doubles, adding is easy
  - disadvantage: needs to be updated when any profile is updated, data is not next to profile!

- Verify:
 - add comments

- Fix:
 - User Search

- Low: Trust Manager: make nickname changes possible somehow...

- Make it faster!

Done:

- fix: 
 - Accept FriendShip: OtherUserFriendsKey missing for some reason!
 - Re-Login: Messages start loading before trust manager is ready

- Improve asym decrypt: only decrypt once. also:  improve listener!

- secure own signature key and main key (encrypt with pw is the only way now...)

- Signature Cache
- Trust Manager
 - alert if given nickname/id gets a new key

- SecuredData for:
 - public and private profile
 - messages
 - own keys
 - topic data
 - posts
 - circles
 - friendship

- SecuredData:
 - differ between update and initial encrypt/sign
 - give everything a type!

- make encrypt in keystore only accept keys which have previously been "verified"